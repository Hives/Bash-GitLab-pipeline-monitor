#! /usr/bin/env bash

##############################################################################
# Standard boilerplate (thanks Ethan Schoonover üôè)
##############################################################################

# rerun as X user if running as root
XUSER=$(ps -C Xorg -C X -ouser=)
[ "$(id -un)" = root ] && [ "$XUSER" != root ] && exec su -c "$0 $*" "$XUSER"

# grab X user id if necessary
XUSERID=$(id -u $XUSER)

# key environment variables
export DISPLAY=":0"
export XAUTHORITY=$HOME/.Xauthority
export DBUS_SESSION_BUS_ADDRESS="unix:path=/run/user/$XUSERID/bus"

# script values and config file if we need it
SCRIPTNAME=$(basename $0)
SCRIPTDIR=$(dirname $(readlink -f $0))
CONFIG=/home/$XUSER/.config/$SCRIPTNAME

##############################################################################

source "$SCRIPTDIR/.env"

gitlabApiUrl="https://gitlab.com/api/v4"

function curlGitlab {
    local path="${1}"
    curl "${gitlabApiUrl}${path}" \
      -H "Private-Token: ${gitlabApiToken}" \
      -s
}

function getPipelines {
    local projectId="${1}"
    curlGitlab "/projects/${projectId}/pipelines?ref=master&per_page=10"
}

function getProject {
    local projectId="${1}"
    curlGitlab "/projects/${projectId}"
}

function getLastPipelineStatus {
    local projectId="${1}"
    getPipelines "${projectId}" | jq -r '.[0].status'
}

function getProjectName {
    local projectId="${1}"
    getProject "${projectId}" | jq -r '.name'
}

function notify {
    local summary="${1}"
    local body="${2}"
    notify-send \
        "${summary}" \
        "$(echo -e "${body}")" \
        -u critical
}

function main {
    failedPipelines=()

    for project in "${projects[@]}"; do
        if [ $(getLastPipelineStatus "${project}") == "failed" ]; then
            failedPipelines+=("${project}")
        fi
    done

    if [ ${#failedPipelines[@]} -ne 0 ]; then
        for project in "${failedPipelines[@]}"; do
            projectName="$(getProjectName "${project}")"
            body="${body}‚Ä¢ ${projectName}\n"
        done

        notify "The following pipelines are failing:" "${body}"
    fi
}

main
